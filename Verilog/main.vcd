$date
	Mon Oct 30 20:04:09 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module main $end
$var wire 5 ! z [4:0] $end
$var wire 1 " x $end
$var wire 1 # val_id $end
$var wire 1 $ light $end
$var wire 1 % k $end
$var wire 1 & finout $end
$var wire 5 ' Count2 [4:0] $end
$var wire 5 ( Count [4:0] $end
$var reg 1 ) Clk $end
$var reg 1 * Clk2 $end
$var reg 1 + UpOrDown $end
$var reg 1 , UpOrDown2 $end
$var reg 8 - id1 [7:0] $end
$var reg 8 . id2 [7:0] $end
$var reg 8 / id3 [7:0] $end
$var reg 1 0 reset $end
$var reg 1 1 reset2 $end
$var reg 8 2 vaid [7:0] $end
$scope module test $end
$var wire 1 ) Clk $end
$var wire 1 + UpOrDown $end
$var wire 1 0 reset $end
$var reg 5 3 Count [4:0] $end
$upscope $end
$scope module test2 $end
$var wire 1 * Clk $end
$var wire 1 , UpOrDown $end
$var wire 1 1 reset $end
$var reg 5 4 Count [4:0] $end
$upscope $end
$scope module test3 $end
$var wire 5 5 a [4:0] $end
$var wire 5 6 b [4:0] $end
$var reg 5 7 res [4:0] $end
$upscope $end
$scope module test4 $end
$var wire 5 8 A [4:0] $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; c $end
$var wire 1 < d $end
$var wire 1 = e $end
$var wire 1 % x $end
$upscope $end
$scope module test5 $end
$var wire 1 & finout $end
$var wire 1 % k $end
$var wire 1 # y $end
$var wire 1 " x $end
$upscope $end
$scope module test6 $end
$var wire 8 > id1 [7:0] $end
$var wire 8 ? id2 [7:0] $end
$var wire 8 @ id3 [7:0] $end
$var wire 8 A vaid [7:0] $end
$var reg 1 # y $end
$upscope $end
$scope module test7 $end
$var wire 5 B count [4:0] $end
$var reg 1 $ light $end
$upscope $end
$scope module tests $end
$var wire 5 C A [4:0] $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F c $end
$var wire 1 G d $end
$var wire 1 H e $end
$var wire 1 " x $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1H
0G
0F
0E
0D
b1 C
b1 B
b101101 A
b111101 @
b11000110 ?
b101101 >
1=
1<
1;
1:
19
b0 8
b0 7
b1 6
b1 5
b1 4
b1 3
b101101 2
01
00
b111101 /
b11000110 .
b101101 -
1,
1+
1*
1)
b1 (
b1 '
1&
1%
1$
1#
0"
b0 !
$end
#1
0*
0)
#2
1G
0H
b10 '
b10 4
b10 6
b10 B
b10 (
b10 3
b10 5
b10 C
1*
1)
#3
0*
0)
#4
1H
b11 '
b11 4
b11 6
b11 B
b11 (
b11 3
b11 5
b11 C
1*
1)
#5
0%
09
0:
0;
0=
0G
0H
0&
b11101 !
b11101 7
b11101 8
0#
b0 (
b0 3
b0 5
b0 C
0*
0)
b1010110 2
b1010110 A
b1100000 /
b1100000 @
b1101111 .
b1101111 ?
b11010010 -
b11010010 >
0+
10
#6
1=
b11100 !
b11100 7
b11100 8
b100 '
b100 4
b100 6
b100 B
1*
1)
#7
0*
0)
#8
1;
0<
0=
b11011 !
b11011 7
b11011 8
b101 '
b101 4
b101 6
b101 B
1*
1)
#9
0*
0)
#10
1H
b110 '
b110 4
b110 6
b110 B
b1 (
b1 3
b1 5
b1 C
1*
1)
b10000000 2
b10000000 A
b11000111 .
b11000111 ?
b10100101 -
b10100101 >
1+
00
#11
0*
0)
#12
1G
0H
b111 '
b111 4
b111 6
b111 B
b10 (
b10 3
b10 5
b10 C
1*
1)
#13
0*
0)
#14
1H
b1000 '
b1000 4
b1000 6
b1000 B
b11 (
b11 3
b11 5
b11 C
1*
1)
#15
0$
19
1:
b11 !
b11 7
b11 8
1#
b0 '
b0 4
b0 6
b0 B
0*
0)
b1100111 2
b1100111 A
b1010010 /
b1010010 @
b1101111 .
b1101111 ?
b1100111 -
b1100111 >
11
#16
0&
0%
0;
1<
1=
1F
0G
0H
b100 !
b100 7
b100 8
b100 (
b100 3
b100 5
b100 C
1*
1)
#17
0*
0)
#18
0=
1H
b101 !
b101 7
b101 8
b101 (
b101 3
b101 5
b101 C
1*
1)
#19
0*
0)
#20
0<
1=
1G
0H
b110 !
b110 7
b110 8
b110 (
b110 3
b110 5
b110 C
1*
1)
